name: Python Checking

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths:
      - tests/**
      - haralyzer/**
      - .github/workflows/python.yml
      - requirements.txt
      - requirements_dev.txt
  pull_request:
    branches:
      - master
    paths:
      - tests/**
      - haralyzer/**
      - .github/workflows/python.yml
      - requirements.txt
      - requirements_dev.txt

jobs:
  Lint:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04, macos-12, macos-13, macos-14, windows-2019, windows-2022]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "pypy-3.8", "pypy-3.9", "pypy-3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Linux Cache
      uses: actions/cache@v3
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version}}-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}

    - name: MacOS Cache
      uses: actions/cache@v3
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-${{ matrix.python-version}}-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}


    - name: Windows Cache
      uses: actions/cache@v3
      if: startsWith(runner.os, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-${{ matrix.python-version}}-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}


    - name: Install Dependencies
      run: |
        pip install --upgrade pip wheel
        pip install . -r requirements-dev.txt

    - name: Lint
      if: matrix.python-version != 'pypy-3.9'
      run: make lint

    - name: Check Build
      if: github.event.pull_request.base.ref == 'master'
      run: make check-dist

    - name: Tests
      run: make test

    - name: Report to Coveralls
      run: coveralls --service=github
      env:
        COVERALLS_FLAG_NAME: ${{ matrix.os }}-${{ matrix.python-version }}
        COVERALLS_PARALLEL: true
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  Finish:
    needs: Lint
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
        - name: Report Coveralls finished
          run: |
            pip3 install --upgrade coveralls
            coveralls --service=github --finish
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
